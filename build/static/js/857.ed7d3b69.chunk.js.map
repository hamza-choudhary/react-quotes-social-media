{"version":3,"file":"static/js/857.ed7d3b69.chunk.js","mappings":"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","sources":["webpack://react-complete-guide/./src/components/comments/Comments.module.css?d88e","webpack://react-complete-guide/./src/components/comments/NewCommentForm.module.css?81c1","components/comments/NewCommentForm.js","webpack://react-complete-guide/./src/components/comments/CommentItem.module.css?204f","components/comments/CommentItem.js","webpack://react-complete-guide/./src/components/comments/CommentsList.module.css?06d6","components/comments/CommentsList.js","components/comments/Comments.js","webpack://react-complete-guide/./src/components/quotes/HighlightedQuote.module.css?c98c","components/quotes/HighlightedQuote.js","pages/QuoteDetail.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"comments\":\"Comments_comments__oFfxr\"};","// extracted by mini-css-extract-plugin\nexport default {\"form\":\"NewCommentForm_form__nKJy-\",\"loading\":\"NewCommentForm_loading__+dJAn\",\"control\":\"NewCommentForm_control__ea7ee\",\"actions\":\"NewCommentForm_actions__BPFjr\"};","import { useRef, useEffect } from 'react'\n\nimport useHttp from '../../hooks/use-http'\nimport { addComment } from '../../lib/api'\nimport classes from './NewCommentForm.module.css'\nimport LoadingSpinner from '../UI/LoadingSpinner'\n\nconst NewCommentForm = (props) => {\n\tconst commentTextRef = useRef()\n\n\tconst { sendRequest, status, error } = useHttp(addComment)\n\tconst { onAddedComment } = props\n\n\tuseEffect(() => {\n\t\tif (status === 'completed' && !error) {\n\t\t\tonAddedComment()\n\t\t}\n\t}, [status, error, onAddedComment ])\n\n\tconst submitFormHandler = (event) => {\n\t\tevent.preventDefault()\n\n\t\t// optional: Could validate here\n\n\t\t// send comment to server\n\t\tconst enteredText = commentTextRef.current.value\n\t\tsendRequest({ commentData: { text: enteredText }, quoteId: props.quoteId })\n\t}\n\n\treturn (\n\t\t<form className={classes.form} onSubmit={submitFormHandler}>\n\t\t\t{status === 'pending' && (\n\t\t\t\t<div className=\"centered\">\n\t\t\t\t\t<LoadingSpinner />\n\t\t\t\t</div>\n\t\t\t)}\n\t\t\t<div className={classes.control} onSubmit={submitFormHandler}>\n\t\t\t\t<label htmlFor=\"comment\">Your Comment</label>\n\t\t\t\t<textarea id=\"comment\" rows=\"5\" ref={commentTextRef}></textarea>\n\t\t\t</div>\n\t\t\t<div className={classes.actions}>\n\t\t\t\t<button className=\"btn\">Add Comment</button>\n\t\t\t</div>\n\t\t</form>\n\t)\n}\n\nexport default NewCommentForm\n","// extracted by mini-css-extract-plugin\nexport default {\"item\":\"CommentItem_item__beAmL\"};","import classes from './CommentItem.module.css';\n\nconst CommentItem = (props) => {\n  return (\n    <li className={classes.item}>\n      <p>{props.text}</p>\n    </li>\n  );\n};\n\nexport default CommentItem;\n","// extracted by mini-css-extract-plugin\nexport default {\"comments\":\"CommentsList_comments__OLEww\"};","import CommentItem from './CommentItem';\nimport classes from './CommentsList.module.css';\n\nconst CommentsList = (props) => {\n  return (\n    <ul className={classes.comments}>\n      {props.comments.map((comment) => (\n        <CommentItem key={comment.id} text={comment.text} />\n      ))}\n    </ul>\n  );\n};\n\nexport default CommentsList;\n","import { useState, useEffect, useCallback } from 'react'\nimport { useParams } from 'react-router-dom'\n\nimport useHttp from '../../hooks/use-http'\nimport { getAllComments } from '../../lib/api'\nimport classes from './Comments.module.css'\nimport NewCommentForm from './NewCommentForm'\nimport LoadingSpinner from '../UI/LoadingSpinner'\nimport CommentsList from './CommentsList'\n\nconst Comments = () => {\n\tconst [isAddingComment, setIsAddingComment] = useState(false)\n\tconst params = useParams()\n\n\tconst { quoteId } = params\n\tconst { sendRequest, status, data: loadedComments } = useHttp(getAllComments)\n\n\tuseEffect(() => {\n\t\tsendRequest(quoteId)\n\t}, [sendRequest, quoteId])\n\n\tconst startAddCommentHandler = () => {\n\t\tsetIsAddingComment(true)\n\t}\n\n\tconst addedCommentHandler = useCallback(() => {\n\t\tsendRequest(quoteId)\n\n\t}, [sendRequest, quoteId])\n\n\tlet comments\n\n\tif (status === 'pending') {\n\t\tcomments = (\n\t\t\t<div className=\"centered\">\n\t\t\t\t<LoadingSpinner />\n\t\t\t</div>\n\t\t)\n\t}\n\n\tif (status === 'completed' && loadedComments && loadedComments.length > 0) {\n\t\tcomments = <CommentsList comments={loadedComments} />\n\t}\n\n\tif (\n\t\tstatus === 'completed' &&\n\t\t(!loadedComments || loadedComments.length === 0)\n\t) {\n\t\tcomments = <p className=\"centered\"> No comments were added yet </p>\n\t}\n\treturn (\n\t\t<section className={classes.comments}>\n\t\t\t<h2>User Comments</h2>\n\t\t\t{!isAddingComment && (\n\t\t\t\t<button className=\"btn\" onClick={startAddCommentHandler}>\n\t\t\t\t\tAdd a Comment\n\t\t\t\t</button>\n\t\t\t)}\n\t\t\t{isAddingComment && (\n\t\t\t\t<NewCommentForm\n\t\t\t\t\tquoteId={quoteId}\n\t\t\t\t\tonAddedComment={addedCommentHandler}\n\t\t\t\t/>\n\t\t\t)}\n\t\t\t{comments}\n\t\t</section>\n\t)\n}\n\nexport default Comments\n","// extracted by mini-css-extract-plugin\nexport default {\"quote\":\"HighlightedQuote_quote__eNlZt\"};","import classes from './HighlightedQuote.module.css'\n\nconst HighlightedQuote = (props) => {\n\treturn (\n\t\t<figure className={classes.quote}>\n\t\t\t<p>{props.text}</p>\n\t\t\t<figcaption>{props.author}</figcaption>\n\t\t</figure>\n\t)\n}\n\nexport default HighlightedQuote\n","import { Fragment, useEffect } from 'react'\r\nimport { useParams, Route, Link, useRouteMatch } from 'react-router-dom'\r\nimport Comments from '../components/comments/Comments'\r\nimport HighlightedQuote from '../components/quotes/HighlightedQuote'\r\nimport useHttp from '../hooks/use-http'\r\nimport { getSingleQuote } from '../lib/api'\r\nimport LoadingSpinner from '../components/UI/LoadingSpinner'\r\n\r\nconst QuoteDetail = () => {\r\n\tconst match = useRouteMatch()\r\n\tconsole.log(match)\r\n\tconst params = useParams()\r\n\r\n\tconst { quoteId } = params\r\n\r\n\tconst {\r\n\t\tsendRequest,\r\n\t\tstatus,\r\n\t\tdata: loadedQuote,\r\n\t\terror,\r\n\t} = useHttp(getSingleQuote, true)\r\n\r\n\tuseEffect(() => {\r\n\t\tsendRequest(quoteId)\r\n\t}, [sendRequest, quoteId])\r\n\r\n\tif (status === 'pending') {\r\n\t\treturn (\r\n\t\t\t<div className=\"centered\">\r\n\t\t\t\t<LoadingSpinner />\r\n\t\t\t</div>\r\n\t\t)\r\n\t}\r\n\r\n\tif (error) {\r\n\t\treturn <p className=\"centered focused\">{error}</p>\r\n\t}\r\n\r\n\tif (!loadedQuote.text) {\r\n\t\treturn <p>No quote found</p>\r\n\t}\r\n\r\n\treturn (\r\n\t\t<Fragment>\r\n\t\t\t<HighlightedQuote author={loadedQuote.author} text={loadedQuote.text} />\r\n\t\t\t<Route path={`${match.path}`} exact>\r\n\t\t\t\t<div className=\"centered\">\r\n\t\t\t\t\t<Link className=\"btn--flat\" to={`${match.url}/comments`}>\r\n\t\t\t\t\t\tLoad Comments\r\n\t\t\t\t\t</Link>\r\n\t\t\t\t</div>\r\n\t\t\t</Route>\r\n\t\t\t<Route path={`${match.path}/comments`}>\r\n\t\t\t\t<Comments />\r\n\t\t\t</Route>\r\n\t\t</Fragment>\r\n\t)\r\n}\r\n\r\nexport default QuoteDetail\r\n"],"names":["props","commentTextRef","useRef","_useHttp","useHttp","addComment","sendRequest","status","error","onAddedComment","useEffect","submitFormHandler","event","preventDefault","enteredText","current","value","commentData","text","quoteId","_jsxs","className","classes","onSubmit","children","_jsx","LoadingSpinner","htmlFor","id","rows","ref","comments","map","comment","CommentItem","_useState","useState","_useState2","_slicedToArray","isAddingComment","setIsAddingComment","useParams","getAllComments","loadedComments","data","addedCommentHandler","useCallback","length","CommentsList","onClick","NewCommentForm","author","match","useRouteMatch","console","log","getSingleQuote","loadedQuote","Fragment","HighlightedQuote","Route","path","concat","exact","Link","to","url","Comments"],"sourceRoot":""}