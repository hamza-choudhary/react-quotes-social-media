{"version":3,"file":"static/js/884.02530c45.chunk.js","mappings":";4MACA,EAAuB,4BCKvB,EAJa,SAACA,GACb,OAAOC,EAAAA,EAAAA,KAAA,OAAKC,UAAWC,EAAaC,SAAEJ,EAAMI,UAC7C,WCHA,EAAuB,wBAAvB,EAAyD,2BAAzD,EAA8F,2BAA9F,EAAmI,2BC8DnI,EAxDkB,SAACJ,GACjB,IAAAK,GAAkCC,EAAAA,EAAAA,WAAS,GAAMC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAA1CI,EAASF,EAAA,GAAEG,EAAYH,EAAA,GAEzBI,GAAiBC,EAAAA,EAAAA,UACjBC,GAAeD,EAAAA,EAAAA,UAsBrB,OACGE,EAAAA,EAAAA,MAACC,EAAAA,SAAQ,CAAAX,SAAA,EAGPH,EAAAA,EAAAA,KAACe,EAAAA,GAAM,CAACC,KAAMR,EAAWS,QAAS,SAACC,GAAQ,MAAK,2DAA2D,KAC/GlB,EAAAA,EAAAA,KAACmB,EAAI,CAAAhB,UACJU,EAAAA,EAAAA,MAAA,QAAMO,QAbkB,WACvBX,GAAa,EACf,EAWkCR,UAAWC,EAAcmB,SAxB5D,SAA2BC,GAC1BA,EAAMC,iBAEN,IAAMC,EAAgBd,EAAee,QAAQC,MACvCC,EAAcf,EAAaa,QAAQC,MAIzC3B,EAAM6B,WAAW,CAAEC,OAAQL,EAAeM,KAAMH,GACjD,EAewFxB,SAAA,CACpFJ,EAAMgC,YACN/B,EAAAA,EAAAA,KAAA,OAAKC,UAAWC,EAAgBC,UAC/BH,EAAAA,EAAAA,KAACgC,EAAAA,EAAc,OAIjBnB,EAAAA,EAAAA,MAAA,OAAKZ,UAAWC,EAAgBC,SAAA,EAC/BH,EAAAA,EAAAA,KAAA,SAAOiC,QAAQ,SAAQ9B,SAAC,YACxBH,EAAAA,EAAAA,KAAA,SAAOkC,KAAK,OAAOC,GAAG,SAASC,IAAK1B,QAErCG,EAAAA,EAAAA,MAAA,OAAKZ,UAAWC,EAAgBC,SAAA,EAC/BH,EAAAA,EAAAA,KAAA,SAAOiC,QAAQ,OAAM9B,SAAC,UACtBH,EAAAA,EAAAA,KAAA,YAAUmC,GAAG,OAAOE,KAAK,IAAID,IAAKxB,QAEnCZ,EAAAA,EAAAA,KAAA,OAAKC,UAAWC,EAAgBC,UAC/BH,EAAAA,EAAAA,KAAA,UAAQsC,QA1BmB,WAC5B7B,GAAa,EACf,EAwB2CR,UAAU,MAAKE,SAAC,uBAM7D,oBCpCA,EAlBiB,WAChB,IAAAoC,GAAgCC,EAAAA,EAAAA,GAAQC,EAAAA,IAAhCC,EAAWH,EAAXG,YAAaC,EAAMJ,EAANI,OACfC,GAAUC,EAAAA,EAAAA,OAEhBC,EAAAA,EAAAA,YAAU,WACM,cAAXH,GAEHC,EAAQG,KAAK,WAEf,GAAG,CAACJ,EAAQC,IAMZ,OAAO5C,EAAAA,EAAAA,KAACgD,EAAS,CAACjB,UAAsB,YAAXY,EAAsBf,WAJ3B,SAACqB,GACxBP,EAAYO,EACb,GAGD","sources":["webpack://react-complete-guide/./src/components/UI/Card.module.css?26d0","components/UI/Card.js","webpack://react-complete-guide/./src/components/quotes/QuoteForm.module.css?b10c","components/quotes/QuoteForm.js","pages/NewQuote.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"card\":\"Card_card__C6M73\"};","import classes from './Card.module.css'\n\nconst Card = (props) => {\n\treturn <div className={classes.card}>{props.children}</div>\n}\n\nexport default Card\n","// extracted by mini-css-extract-plugin\nexport default {\"form\":\"QuoteForm_form__9nKG5\",\"loading\":\"QuoteForm_loading__ygS4G\",\"control\":\"QuoteForm_control__N645G\",\"actions\":\"QuoteForm_actions__O4fgu\"};","import { Prompt } from 'react-router-dom'\n\nimport { Fragment, useRef, useState } from 'react'\nimport Card from '../UI/Card'\nimport LoadingSpinner from '../UI/LoadingSpinner'\nimport classes from './QuoteForm.module.css'\n\nconst QuoteForm = (props) => {\n  const [isEntered, setIsEntered] = useState(false)\n\n\tconst authorInputRef = useRef()\n\tconst textInputRef = useRef()\n\n  //! we cannot setIsEntered to false in submit handler bcz this is little bit late and setIsEntering wont go through\n  //! below here all one synchronous code onAddQuote func\n\tfunction submitFormHandler(event) {\n\t\tevent.preventDefault()\n\n\t\tconst enteredAuthor = authorInputRef.current.value\n\t\tconst enteredText = textInputRef.current.value\n\n\t\t// optional: Could validate here\n\n\t\tprops.onAddQuote({ author: enteredAuthor, text: enteredText })\n\t}\n\n  const formFocusHandler = () => {\n    setIsEntered(true)\n  }\n  const finishEnteringHandler = () => {\n    setIsEntered(false)\n  }\n\n\treturn (\n    <Fragment>\n      {/* prompt navigates whether allow to change url or show error when some condition met */}\n      {/* when is either true or false */}\n      <Prompt when={isEntered} message={(location) => 'Are you sure you want to leave your all data will be lost'} />\n\t\t<Card>\n\t\t\t<form onFocus={formFocusHandler} className={classes.form} onSubmit={submitFormHandler}>\n\t\t\t\t{props.isLoading && (\n\t\t\t\t\t<div className={classes.loading}>\n\t\t\t\t\t\t<LoadingSpinner />\n\t\t\t\t\t</div>\n\t\t\t\t)}\n\n\t\t\t\t<div className={classes.control}>\n\t\t\t\t\t<label htmlFor=\"author\">Author</label>\n\t\t\t\t\t<input type=\"text\" id=\"author\" ref={authorInputRef} />\n\t\t\t\t</div>\n\t\t\t\t<div className={classes.control}>\n\t\t\t\t\t<label htmlFor=\"text\">Text</label>\n\t\t\t\t\t<textarea id=\"text\" rows=\"5\" ref={textInputRef}></textarea>\n\t\t\t\t</div>\n\t\t\t\t<div className={classes.actions}>\n\t\t\t\t\t<button onClick={finishEnteringHandler} className=\"btn\">Add Quote</button>\n\t\t\t\t</div>\n\t\t\t</form>\n\t\t</Card>\n    </Fragment>\n\t)\n}\n\nexport default QuoteForm\n","import { useEffect } from 'react'\r\n\r\nimport { useHistory } from 'react-router-dom'\r\nimport QuoteForm from '../components/quotes/QuoteForm'\r\nimport useHttp from '../hooks/use-http'\r\nimport { addQuote } from '../lib/api'\r\n\r\nconst NewQuote = () => {\r\n\tconst { sendRequest, status } = useHttp(addQuote)\r\n\tconst history = useHistory()\r\n\r\n\tuseEffect(() => {\r\n\t\tif (status === 'completed') {\r\n\t\t\t//? push-> adds mew page === we can go back | replace->redirect === for replace the current page we cant go back\r\n\t\t\thistory.push('./quotes')\r\n\t\t}\r\n\t}, [status, history])\r\n\r\n\tconst addQuoteHandler = (quoteData) => {\r\n\t\tsendRequest(quoteData)\r\n\t}\r\n\r\n\treturn <QuoteForm isLoading={status === 'pending'} onAddQuote={addQuoteHandler} />\r\n}\r\n\r\nexport default NewQuote\r\n"],"names":["props","_jsx","className","classes","children","_useState","useState","_useState2","_slicedToArray","isEntered","setIsEntered","authorInputRef","useRef","textInputRef","_jsxs","Fragment","Prompt","when","message","location","Card","onFocus","onSubmit","event","preventDefault","enteredAuthor","current","value","enteredText","onAddQuote","author","text","isLoading","LoadingSpinner","htmlFor","type","id","ref","rows","onClick","_useHttp","useHttp","addQuote","sendRequest","status","history","useHistory","useEffect","push","QuoteForm","quoteData"],"sourceRoot":""}